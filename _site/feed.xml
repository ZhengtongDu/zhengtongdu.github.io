<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-01-15T18:12:19+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Zhengtong’s blog</title><subtitle>Learning and recording</subtitle><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><entry><title type="html">Computational_Geometry_notes_01</title><link href="http://localhost:4000/2023/01/14/Computational_Geometry_notes_01/" rel="alternate" type="text/html" title="Computational_Geometry_notes_01" /><published>2023-01-14T23:49:00+08:00</published><updated>2023-01-14T23:49:00+08:00</updated><id>http://localhost:4000/2023/01/14/Computational_Geometry_notes_01</id><content type="html" xml:base="http://localhost:4000/2023/01/14/Computational_Geometry_notes_01/"><![CDATA[]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="learning" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">6.046_notes_01</title><link href="http://localhost:4000/2023/01/14/6_046_notes_01/" rel="alternate" type="text/html" title="6.046_notes_01" /><published>2023-01-14T23:44:00+08:00</published><updated>2023-01-14T23:44:00+08:00</updated><id>http://localhost:4000/2023/01/14/6_046_notes_01</id><content type="html" xml:base="http://localhost:4000/2023/01/14/6_046_notes_01/"><![CDATA[<blockquote>
  <p>6.046: Design and Analysis of Algorithms
学习笔记01：</p>
</blockquote>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="learning" /><category term="“6.046”" /><summary type="html"><![CDATA[6.046: Design and Analysis of Algorithms 学习笔记01：]]></summary></entry><entry><title type="html">GAMES101_notes_02</title><link href="http://localhost:4000/2023/01/14/GAMES101_notes_02/" rel="alternate" type="text/html" title="GAMES101_notes_02" /><published>2023-01-14T23:44:00+08:00</published><updated>2023-01-14T23:44:00+08:00</updated><id>http://localhost:4000/2023/01/14/GAMES101_notes_02</id><content type="html" xml:base="http://localhost:4000/2023/01/14/GAMES101_notes_02/"><![CDATA[<blockquote>
  <p>课程《GAMES101》的学习笔记02：Shading,</p>
</blockquote>

<h2 id="lesson-07-shading-1illumination-shading-and-graphics-pipeline">Lesson 07 Shading 1(Illumination, Shading and Graphics Pipeline)</h2>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="learning" /><category term="GAMES101" /><summary type="html"><![CDATA[课程《GAMES101》的学习笔记02：Shading,]]></summary></entry><entry><title type="html">GAMES101_notes_01</title><link href="http://localhost:4000/2023/01/02/GAMES101_notes_01/" rel="alternate" type="text/html" title="GAMES101_notes_01" /><published>2023-01-02T15:59:00+08:00</published><updated>2023-01-02T15:59:00+08:00</updated><id>http://localhost:4000/2023/01/02/GAMES101_notes_01</id><content type="html" xml:base="http://localhost:4000/2023/01/02/GAMES101_notes_01/"><![CDATA[<blockquote>
  <p>课程《GAMES101》的学习笔记01：Introduction, Transformation, Rasterization</p>
</blockquote>

<h2 id="lesson-02-review-of-linear-algebra-向量与线性代数">Lesson 02 Review of Linear Algebra 向量与线性代数</h2>

<h3 id="图形学依赖">图形学依赖</h3>

<ol>
  <li>基础数学：线性代数 微积分 统计学；</li>
  <li>基础物理学：光学 力学；</li>
  <li>其他： 信号处理 数值分析</li>
</ol>

<h3 id="线性代数">线性代数</h3>

<p>向量 矩阵 。。。</p>

<h2 id="lesson-03-transformation-变换">Lesson 03 Transformation 变换</h2>

<h3 id="为什么研究变换">为什么研究变换</h3>

<ul>
  <li>Modeling 模型变换</li>
  <li>Viewing 视角变换（从三维到二维的）投影</li>
</ul>

<p>广泛应用</p>

<h3 id="二维变换旋转-放缩-裁剪">二维变换：旋转 放缩 裁剪</h3>

<ul>
  <li>
    <p>缩放变换(Scale)：</p>

\[\begin{bmatrix}x'\\ y'\end{bmatrix}
  =
  \begin{bmatrix}s_x &amp; 0 \\ 0 &amp; s_y\end{bmatrix}
  \begin{bmatrix}x\\ y\end{bmatrix}\]
  </li>
  <li>
    <p>反射变换(Reflection):</p>

\[\begin{bmatrix}x'\\ y'\end{bmatrix}
  =
  \begin{bmatrix}-1 &amp; 0 \\ 0 &amp; 1\end{bmatrix}
  \begin{bmatrix}x\\ y\end{bmatrix}\]
  </li>
  <li>
    <p>切变(Shear)</p>

\[\begin{bmatrix}x'\\ y'\end{bmatrix}
  =
  \begin{bmatrix}1 &amp; a \\ 0 &amp; 1\end{bmatrix}
  \begin{bmatrix}x\\ y\end{bmatrix}\]
  </li>
  <li>
    <p>旋转变换(Rotate)：默认关于原点逆时针旋转。</p>

\[\begin{bmatrix}x'\\ y'\end{bmatrix}
  =
  \begin{bmatrix}\cos \theta &amp; -\sin \theta \\ \sin \theta &amp; \cos \theta\end{bmatrix}
  \begin{bmatrix}x\\ y\end{bmatrix}\]
  </li>
</ul>

<p>以上变换的共同点：线性变换（可以通过矩阵来表示）：</p>

\[\begin{bmatrix}x'\\ y'\end{bmatrix}
    =
    \begin{bmatrix}a &amp; b \\ c &amp; d\end{bmatrix}
    \begin{bmatrix}x\\ y\end{bmatrix}\]

<h3 id="齐次坐标">齐次坐标</h3>

<p>平移变换(Transition)：无法通过上述形式的线性变换矩阵来表示。</p>

\[\begin{bmatrix}x'\\ y'\end{bmatrix}
    =
    \begin{bmatrix}a &amp; b \\ c &amp; d\end{bmatrix}
    \begin{bmatrix}x\\ y\end{bmatrix}
     +
     \begin{bmatrix}t_x\\ t_y\end{bmatrix}\]

<p>由此引入了 <strong>齐次坐标(Homogenous Coordinates)</strong> 这个概念：
对于二维向量和二维点，增加第三个分量($w$-coordinate)</p>

<ul>
  <li>二维点： $(x, y, 1)^\mathrm{T}$</li>
  <li>二维向量： $(x, y, 0)^\mathrm{T}$</li>
</ul>

<p>由此平移操作可以用一个矩阵乘法的形式表示：</p>

\[\begin{bmatrix}x'\\ y' \\ w'\end{bmatrix}
    =
    \begin{bmatrix}1 &amp; 0 &amp; t_x \\ 0 &amp; 1 &amp; t_y \\ 0 &amp; 0 &amp; 1\end{bmatrix}
    \begin{bmatrix}x\\ y \\ w\end{bmatrix}\]

<p>向量的$w$分量为$0$的原因：因为向量具有 <strong>平移不变性</strong></p>

<ul>
  <li>vector + vector = vector</li>
  <li>point - point = vector</li>
  <li>point + vector = point</li>
  <li>point + point = ？？</li>
</ul>

<p>$
    \begin{pmatrix}x\ y \ w\end{pmatrix}
$
对应二维点
$
    \begin{pmatrix}x/w\ y/w \ 1\end{pmatrix}, w \ne 0
$</p>

<p>由此两个齐次坐标点的相加可以视为两点的 <strong>加权平均</strong></p>

<h3 id="仿射变换">仿射变换</h3>

\[\begin{pmatrix}x'\\ y' \\ 1\end{pmatrix}
    =
    \begin{pmatrix}a &amp; b &amp; t_x \\ c &amp; d &amp; t_y \\ 0 &amp; 0 &amp; 1\end{pmatrix}
    \begin{pmatrix}x\\ y \\ 1\end{pmatrix}\]

<p>Scale:</p>

\[S(s_x, s_y)
    =
    \begin{pmatrix}s_x &amp; 0 &amp; 0 \\ 0 &amp; s_y &amp; 0 \\ 0 &amp; 0 &amp; 1\end{pmatrix}\]

<p>Rotation:</p>

\[R(\alpha)
    =
    \begin{pmatrix}\cos \alpha &amp; -\sin \alpha &amp; 0 \\ \sin \alpha &amp; \cos \alpha &amp; 0 \\ 0 &amp; 0 &amp; 1\end{pmatrix}\]

<p>Translation:</p>

\[T(t_x, t_y)
    =
    \begin{pmatrix}1 &amp; 0 &amp; t_x \\ 0 &amp; 1 &amp; t_y \\ 0 &amp; 0 &amp; 1\end{pmatrix}\]

<h3 id="逆变换变换组合变换分解">逆变换、变换组合、变换分解</h3>

\[A_n(\dots A_2(A_1 (x))) = \mathbf{A}_n \cdots \mathbf{A}_2\cdot \mathbf{A}_1 \cdot
\begin{pmatrix}x \\ y \\ 1\end{pmatrix}\]

<p>复杂变换的分解：</p>

<ul>
  <li>如何关于固定点$c$旋转？</li>
</ul>

<ol>
  <li>将图形平移$-c$；</li>
  <li>旋转</li>
  <li>平移$c$</li>
</ol>

\[\mathbf{M} = \mathbf{T}(c)\cdot \mathbf{R}(\alpha) \cdot \mathbf{T}(-c)\]

<h3 id="三维变换">三维变换</h3>

<p>仍然利用齐次坐标系统：</p>

<ul>
  <li>三维点坐标： $(x, y, z, 1)^\mathrm{T}$</li>
  <li>三维向量坐标： $(x, y, z, 0)^\mathrm{T}$</li>
</ul>

<p>定义$(x, y, z, w)^\mathrm{T}(w\ne 0)$表示三维空间中点
\((x/w, y/w, z/w)^\mathrm{T}\)</p>

<p>三维空间中仿射变换矩阵：
\(\begin{pmatrix}x'\\ y' \\ z'\\ 1\end{pmatrix}
    =
    \begin{pmatrix}a &amp; b &amp; c &amp; t_x \\ d &amp; e &amp; f &amp; t_y \\ g &amp; h &amp; i &amp; t_z \\ 0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}
    \begin{pmatrix}x\\ y \\ z\\ 1\end{pmatrix}\)
上述形式的仿射变换矩阵可以视作 <strong>先进行线性变换再进行平移变换</strong></p>

<h2 id="lesson-04-transformation-cont">Lesson 04 Transformation Cont</h2>

<h3 id="对上节课的补充旋转变换的逆变换矩阵形式">对上节课的补充：旋转变换的逆变换矩阵形式</h3>

\[R(\alpha)
    =
    \begin{pmatrix}\cos \alpha &amp; -\sin \alpha &amp; 0 \\ \sin \alpha &amp; \cos \alpha &amp; 0 \\ 0 &amp; 0 &amp; 1\end{pmatrix}\]

\[R(-\alpha)
    =
    \begin{pmatrix}\cos \alpha &amp; \sin \alpha &amp; 0 \\ -\sin \alpha &amp; \cos \alpha &amp; 0 \\ 0 &amp; 0 &amp; 1\end{pmatrix}
    =
    R(\alpha)^{-1}
    =
    R(\alpha)^\mathrm{T}\]

<h3 id="三维坐标系下的变换">三维坐标系下的变换</h3>

<ul>
  <li>三维点坐标： $(x, y, z, 1)^\mathrm{T}$</li>
  <li>三维向量坐标： $(x, y, z, 0)^\mathrm{T}$</li>
</ul>

<p>Scale
\(\mathbf{S}(s_x, s_y, s_z)=
    \begin{pmatrix}s_x &amp; 0 &amp; 0 &amp; 0 \\ 0 &amp; s_y &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; s_z &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}\)</p>

<p>Translation
\(\mathbf{T}(t_x, t_y, t_z)=
    \begin{pmatrix}1 &amp; 0 &amp; 0 &amp; t_x \\ 0 &amp; 1 &amp; 0 &amp; t_y \\ 0 &amp; 0 &amp; 1 &amp; t_z \\ 0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}\)</p>

<p>Rotation</p>

\[\mathbf{R}_x(\alpha)=
    \begin{pmatrix}1 &amp; 0 &amp; 0 &amp; 0 \\ 0 &amp; \cos\alpha &amp; -\sin\alpha &amp; 0 \\ 0 &amp; \sin\alpha &amp; \cos\alpha &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}\]

\[\mathbf{R}_y(\alpha)=
    \begin{pmatrix}\cos\alpha &amp; 0 &amp; \sin\alpha &amp; 0 \\
     0 &amp; 1 &amp; 0 &amp; 0 \\
      -\sin\alpha &amp; 0 &amp; \cos\alpha &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}\]

\[\mathbf{R}_z(\alpha)=
    \begin{pmatrix}\cos\alpha &amp; -\sin\alpha &amp; 0 &amp; 0 \\ \sin\alpha &amp; \cos\alpha &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}\]

<p>如何考虑复杂的三维旋转变换？</p>

\[\mathbf{R}_{xyz}(\alpha, \beta, \gamma) = \mathbf{R}_x(\alpha)\mathbf{R}_y(\beta)\mathbf{R}_z(\gamma)\]

<p>$\alpha, \beta, \gamma$被称为欧拉角</p>

<h3 id="rodrigues-rotation-formula">Rodrigues’ Rotation Formula</h3>

<p>Rotation by angle $\alpha$ around axis $\mathbf{n}$</p>

\[\mathbf{R}(\mathbf{n}, \alpha) = \cos(\alpha) \mathbf{I} + (1-\cos(\alpha))\mathbf{n}\mathbf{n}^\mathrm{T} + \sin \alpha     \begin{pmatrix}0 &amp; -n_z &amp; n_y \\ n_z &amp; 0 &amp; -n_x \\  -n_y &amp; n_x &amp; 0\end{pmatrix}\]

<h3 id="viewing-transformation">Viewing transformation</h3>

<ul>
  <li>View/Camera transformation 观测变换/视图变换</li>
  <li>Projection transformation 投影变换
    <ul>
      <li>Orthographic projection 正交</li>
      <li>Perspective projection 透视</li>
    </ul>
  </li>
</ul>

<p>如何拍一张照片？MVP Transformations</p>

<ul>
  <li>model transformation 模型变换</li>
  <li><strong>view transformation 视图变换</strong></li>
  <li>projection transformation 投影变换</li>
</ul>

<p>如何确定相机位置？</p>

<ul>
  <li>Position $\vec{e}$</li>
  <li>Look-at/ gaze direction $\hat{g}$</li>
  <li>Up direction $\hat{t}$</li>
</ul>

<h4 id="约定相机始终位于__原点__永远向-z方向看永远以y轴为固定向上方向改变其他物体的位置而不改变相机的标准位置">约定：相机始终位于__原点__，永远向$-z$方向看，永远以$y$轴为固定向上方向，改变其他物体的位置而不改变相机的标准位置</h4>

<p>在数学上通过矩阵变换将相机移到标准位置：</p>

<ul>
  <li>将位置 $\vec{e}$ 移到原点;</li>
  <li>旋转 $\hat{g}$ 到 $-z$ 方向；</li>
  <li>旋转 $\hat{t}$ 到 $y$ 方向。</li>
</ul>

<p>进行矩阵变换则为：</p>

\[\mathbf{M}_{view} = \mathbf{R}_{view}\mathbf{T}_{view}\]

<p>其中</p>

<ul>
  <li>
\[\mathbf{T}_{view}=
  \begin{pmatrix}
  1 &amp; 0 &amp; 0 &amp; -x_e \\
  0 &amp; 1 &amp; 0 &amp; -y_e \\
  0 &amp; 0 &amp; 1 &amp; -z_e \\
  0 &amp; 0 &amp; 0 &amp; 1
  \end{pmatrix}\]
  </li>
  <li>由于对于 $\mathbf{R}_{view}$ 的逆矩阵，是将 $x$ 轴旋转到 $\hat{g}\times \hat{t}$，将 $y$ 轴旋转到 $\hat{t}$ ，将 $z$ 轴旋转到 $-\hat{g}$ 上，故
\(\mathbf{R}_{view}^{-1}=
  \begin{pmatrix}
  x_{\hat{g}\times\hat{t}} &amp; x_{\hat{t}} &amp; x_{-\hat{g}} &amp; 0
  \\ y_{\hat{g}\times\hat{t}} &amp; y_{\hat{t}} &amp; y_{-\hat{g}} &amp; 0
  \\ z_{\hat{g}\times\hat{t}} &amp; z_{\hat{t}} &amp; z_{-\hat{g}} &amp; 0
  \\ 0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}\)</li>
  <li>因此
\(\mathbf{R}_{view}= (\mathbf{R}_{view}^{-1})^\mathrm{T} =
  \begin{pmatrix}
  x_{\hat{g}\times\hat{t}} &amp; y_{\hat{g}\times\hat{t}} &amp; z_{\hat{g}\times\hat{t}} &amp; 0
  \\ x_{\hat{t}} &amp; y_{\hat{t}} &amp; z_{\hat{t}} &amp; 0
  \\ x_{-\hat{g}} &amp; y_{-\hat{g}} &amp; z_{-\hat{g}} &amp; 0
  \\ 0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}\)</li>
</ul>

<h3 id="projection-transformation">Projection Transformation</h3>

<ul>
  <li>正交投影</li>
  <li>透视投影</li>
</ul>

<h4 id="正交投影">正交投影</h4>

<p>简单理解正交投影：</p>

<ul>
  <li>将照相机固定在原点，看向 $-z$ 方向，上方为 $y$ 方向；</li>
  <li>抛掉所有 $z$ 方向坐标；</li>
  <li>平移和放缩结果的矩形画面到 $[-1, 1]^2$上。</li>
</ul>

<p>约定俗成的方法：</p>

<ul>
  <li>将包裹全部物体的长方体 $[l, r]\times[b, t]\times[f, n]$ 映射到标准立方体(canonical cube) $[-1, 1]^3$ ，先做平移，将中心移到原点之后再进行放缩。</li>
  <li>变换矩阵为：
\(\mathbf{M}_{ortho}  =
\begin{pmatrix}
\frac{2}{r - l} &amp; 0 &amp; 0 &amp; 0 \\
0 &amp; \frac{2}{t - b} &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; \frac{2}{n - f} &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}
\begin{pmatrix}
1 &amp; 0 &amp; 0 &amp; -\frac{r + l}{2} \\
0 &amp; 1 &amp; 0 &amp; -\frac{t + b}{2} \\
0 &amp; 0 &amp; 1 &amp; -\frac{n + f}{2} \\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}\)</li>
</ul>

<h4 id="透视投影">透视投影</h4>

<p>回顾数学基础：</p>

<ul>
  <li>对于齐次坐标系， $(x, y, z, 1)$ 和 $(kx, ky, kz, k), k \ne 0$ 都表示三维空间中 $(x, y, z)$ 这个点</li>
</ul>

<p>如何做透视投影：</p>

<ul>
  <li>首先，将棱台的远平面压缩成和近平面相同大小的长方形 ($\mathbf{M_{persp\rightarrow ortho}}$)</li>
  <li>将压缩后的远平面通过正交投影 ($\mathbf{M}_{ortho}$)</li>
</ul>

<h4 id="如何求mathbfm_persprightarrow-ortho">如何求$\mathbf{M}_{persp\rightarrow ortho}$？</h4>

<p>根据相似三角形的理论，如果近平面到原点的距离是 $n$，那么点 $(x, y, z)$ 通过相似变换映射到近平面上的点 $(x’, y’, z’)$ 应当满足
\(y' = \frac{n}{z}y,\quad x' = \frac{n}{z} x.\)
由于这样的相似变换总是会非线性的改变在棱台内点的 $z$ 分量，因此我们希望能够在这些变换中找到满足如下两点性质的一类变换：</p>

<ul>
  <li>对位于近平面，即 $z = n$ 的所有点，在相似变换后仍然保持 $z’ = n$；</li>
  <li>对位于远平面，即 $z = f$ 的所有店，在相似变换后仍然保持 $z’ = f$.</li>
</ul>

<p>由此我们可以通过逐行凑矩阵的方式，推得透视投影变换矩阵 $\mathbf{M}_{persp\rightarrow ortho}$ 应当为</p>

\[\mathbf{M}_{persp\rightarrow ortho}
 =
\begin{pmatrix}
n &amp; 0 &amp; 0 &amp; 0 \\
0 &amp; n &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; n+f &amp; -nf\\
0 &amp; 0 &amp; 1 &amp; 0
\end{pmatrix}\]

<p>可以验证</p>

\[\mathbf{M}_{persp\rightarrow ortho}
\begin{pmatrix}
x \\ y \\ n \\ 1
\end{pmatrix}
 =

\begin{pmatrix}
nx \\ ny \\ n^2 \\ n
\end{pmatrix}
\Leftrightarrow
\begin{pmatrix}
x \\ y \\ n \\ 1
\end{pmatrix}\]

\[\mathbf{M}_{persp\rightarrow ortho}
\begin{pmatrix}
x \\ y \\ f \\ 1
\end{pmatrix}
 =
\begin{pmatrix}
nx \\ ny \\ f^2 \\ f
\end{pmatrix}
\Leftrightarrow
\begin{pmatrix}
\frac{nx}{f} \\ \frac{ny}{f} \\ f \\ 1
\end{pmatrix}\]

<p>满足我们最开始的要求。</p>

<p>最后，我们结合正交投影部分的结论，可以推出</p>

\[\mathbf{M}_{persp}
 =

\mathbf{M}_{othro}
\mathbf{M}_{persp\rightarrow ortho}\]

<h2 id="lesson-05-rasterization-光栅化-1triangles">Lesson 05 Rasterization 光栅化 1(Triangles)</h2>

<ul>
  <li>Viewport transformation</li>
  <li>Rasterization
    <ul>
      <li>Different raster displays</li>
      <li>Rasterizing a triangle</li>
    </ul>
  </li>
</ul>

<h3 id="viewport-transformation">Viewport transformation</h3>

<p>关于视锥的更多定义：</p>

<ul>
  <li>近平面的宽高比 aspect ratio = width/height</li>
  <li>垂直可视角度 vertical field-of-view(fovY) 近平面上下边中点和原点张成的角度
\(\tan \frac{fovY}{2} =\frac{t}{|n|}\\
aspect = \frac{r}{t}\)</li>
</ul>

<p>What’s after MVP? -&gt; $[-1, 1]^3$的立方体</p>

<h3 id="from-canonical-cube-to-screen-rasterization光栅化">From Canonical Cube to Screen: Rasterization(光栅化)</h3>

<p>What is a screen?</p>

<ul>
  <li>An array of pixels</li>
  <li>Size of the array: resolution</li>
  <li>A typical kind of raster display</li>
</ul>

<p>Raster = screen in German</p>

<ul>
  <li>Rasterize = drawing onto the screen</li>
</ul>

<p>Pixel (FYI, short for “picture element”)</p>

<ul>
  <li>For now: A pixel is a little square with uniform color</li>
  <li>Color is a mixture of (red, green, blue)</li>
</ul>

<p>定义屏幕空间：
左下角为原点，向右为$x$轴正方向，向上为$y$轴正方向，并做如下约定：</p>

<ul>
  <li>像素坐标由 $(x, y)$ 的形式组成，其中 $x, y$ 均为整数；</li>
  <li>像素坐标取值从 $(0, 0)$ 到 $(width - 1, height - 1)$;</li>
  <li>每颗像素 $(x, y)$ 的中心位于 $(x + 0.5, y + 0.5)$；</li>
  <li>屏幕覆盖范围是 $[0, width]\times [0, height]$</li>
</ul>

<p>接下来如何处理？</p>

<ul>
  <li>对于 $z$ 方向的值：先不管；</li>
  <li>对于 $x-y$ 平面：将平面 $[-1, 1]^2$ 映射到 $[0, width]\times [0, height]$</li>
</ul>

<p>视口变换</p>

\[\mathbf{M}_{viewport}
 =

\begin{pmatrix}
\frac{width}{2} &amp; 0 &amp; 0 &amp; \frac{width}{2} \\
0 &amp; \frac{height}{2} &amp; 0 &amp; \frac{height}{2} \\
0 &amp; 0 &amp; 1 &amp; 0\\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}\]

<p>接下来：通过光栅化，将三角形转化成像素</p>

<h4 id="三角形基本图形元素">三角形：基本图形元素</h4>

<p>Why triangles?</p>

<ul>
  <li>Most basic polygon
    <ul>
      <li>Can break up other polygons</li>
    </ul>
  </li>
  <li>Unique properties
    <ul>
      <li>Guaranteed to be planar</li>
      <li>Well-defined interior</li>
      <li>Well-defined method for interpolating values at vertices over triangle (barycentric interpoation)</li>
    </ul>
  </li>
</ul>

<p>What Pixel Values Arrpoximate a Triangle?</p>

<ul>
  <li>Input: position of triangle vertices projected on screen</li>
  <li>Output: set of pixel values approximating triangle</li>
</ul>

<p>A simple approach: Sampling(采样)</p>

<p>Sampling is a core idea in graphics.</p>

<ul>
  <li>We sample time(1D), area(2D), directin(2D), volume(3D)…</li>
</ul>

<h4 id="sample-if-each-pixel-center-is-inside-triangle">Sample If Each Pixel Center is Inside Triangle</h4>

\[inside(t, x, y) =
\left\{
\begin{array}{lr}
1 &amp; \mathrm{Point(x, y)\ is\ in\ triangle\ t}\\
0 &amp; \mathrm{else}
\end{array}
\right.\]

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">xmax</span><span class="p">;</span> <span class="o">++</span><span class="n">x</span><span class="p">)</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">ymax</span><span class="p">;</span> <span class="o">++</span><span class="n">y</span><span class="p">)</span>
        <span class="n">image</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="n">inside</span><span class="p">(</span><span class="n">tri</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">);</span>
</code></pre></div></div>

<p>应当如何实现 $inside(tri, x, y)$ ? -&gt; 利用向量叉积。</p>

<ul>
  <li>将三角形三个顶点记为A、B、C，待测试点记为P；</li>
  <li>分别测试AB和BP、BC和CP、CA和AP的叉积；</li>
  <li>如果三个结果符号相同，则认为P在三角形ABC内；否则认为P在三角形ABC外。</li>
</ul>

<h4 id="进一步的优化">进一步的优化</h4>

<ul>
  <li>(Axis-Aligned )Bounding Box(包围盒，AABB)，可以减少检测像素的数量。</li>
  <li>Incremental Triangle Traversal：可以优化应用AABB效果不好的情况。</li>
</ul>

<h4 id="光栅化中的一个问题aliasing走样jaggies锯齿">光栅化中的一个问题：Aliasing(走样)–Jaggies(锯齿)</h4>

<h2 id="lesson-06-rasterization-2-antialiasing-and-z-buffering">Lesson 06 Rasterization 2 (Antialiasing and Z-buffering)</h2>

<h3 id="采样理论">采样理论</h3>

<ul>
  <li>Sampling is Ubiquitous in Computer Graphics
    <ul>
      <li>Rasterization = Sample 2D Positions</li>
      <li>Photograph = Sample Image Sensor Plane</li>
      <li>Video = Sample Time</li>
    </ul>
  </li>
  <li>Sampling Artifacts: (Errors/Mistakes/Inaccuracies) in Computer Graphics
    <ul>
      <li>Jaggies(Staircase Pattern)</li>
      <li>Moire Patterns in Imaging</li>
      <li>Wagon wheel effect(False Motion)</li>
    </ul>
  </li>
  <li>Behind the Aliasing Artifacts: Signals are changing too fast(high frequency) but sampled too slowly.</li>
</ul>

<h3 id="antialiasing-idea-blurringpre-filtering-before-sampling">Antialiasing Idea: Blurring(Pre-Filtering) Before Sampling</h3>

<p>举例：对三角形光栅化的时候，在采样之前对边缘进行模糊，之后再进行采样，可以使得边缘更加平滑。</p>

<p>Blurred aliasing: Sample then filter -&gt; WRONG!</p>

<p>Filter then sample -&gt; RIGHT!</p>

<h3 id="frequency-domain">Frequency Domain</h3>

<p>Fourier Transform</p>

\[F(\omega) = \int_{-\infty}^{\infty} f(x) e^{-2\pi i \omega x}dx\]

<p>Inverse Fourier Transform</p>

\[f(x) = \int_{-\infty}^{\infty}F(\omega)e^{2\pi i \omega x}d\omega\]

<p>Undersampling Creates Frequency Aliases. High-frequency signal is insufficiently sampled: samples erroneously appear to be from a low-frequency signal.</p>

<p>Two frequencies that are indistinguishable at a given sampling rate are called “aliass”.</p>

<h3 id="filtering--getting-rid-of-certain-frequency-contents">Filtering = Getting rid of certain frequency contents</h3>

<h3 id="filtering--convolution--averaging">Filtering = Convolution (= Averaging)</h3>

<p>Convolution Theorem</p>

<p>Convolution in the spatial domain is equal to multiplication in the frequency domain, and vice versa</p>

<h3 id="sampling--repeating-frequency-contents">Sampling = Repeating Frequency Contents</h3>

<h3 id="aliasing--mixed-frequency-contents">Aliasing = Mixed Frequency Contents</h3>

<h3 id="how-can-we-reduce-aliasing-error">How Can We Reduce Aliasing Error?</h3>

<ul>
  <li>Option 1: Increase samplint rate
    <ul>
      <li>Essentially increasing the distance between replicas in the Fourier domain</li>
      <li>Higher resolution displays, sensors, framebuffers…</li>
      <li>But: costly &amp; may need very high resolution</li>
    </ul>
  </li>
  <li>Option 2: Antialiasing
    <ul>
      <li>Making Fourier contents “narrower” before repeating</li>
      <li>i.e. Filtering out high frequencies before sampling</li>
    </ul>
  </li>
</ul>

<h3 id="antialiasing-by-averaging-values-in-pixel-area">Antialiasing By Averaging Values in Pixel Area</h3>

<p>Solution:</p>

<ul>
  <li><strong>Convolve</strong> f(x,y) by a 1-pixel box-blur
    <ul>
      <li>Recall: convolving = filtering = averaging</li>
    </ul>
  </li>
  <li><strong>Then Sample</strong> at every pixel’s center</li>
</ul>

<h3 id="antialiasing-by-supersamplingmsaa-multisampling-antialiasing">Antialiasing By Supersampling(MSAA, multisampling antialiasing)</h3>

<p><strong>Supersampling</strong>: Approximate the effect of the 1-pixel box filter by sampling multiple locations within a pixel and averaing their values</p>

<p>MSAA解决的是对信号的模糊的操作，而采样的操作其实与MSAA没有关系（并不是直接提高屏幕的分辨率）</p>

<h3 id="antialiasing-today">Antialiasing Today</h3>

<ul>
  <li>No free lunch!
    <ul>
      <li>What’s the cost of MSAA？</li>
    </ul>
  </li>
  <li>Milestones
    <ul>
      <li>FXAA(Fast Approximate AA) 一种后处理解决方案</li>
      <li>TAA(Temporal AA) 考虑随时间变化时前后帧的叠加结果</li>
    </ul>
  </li>
  <li>Super resolution/ Super sampling 采样率不足的问题
    <ul>
      <li>From low resolution to high resolution</li>
      <li>Essentially still “not enough samples” problem</li>
      <li>DLSS(Deep Learning Super Sampling)</li>
    </ul>
  </li>
</ul>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="learning" /><category term="GAMES101" /><summary type="html"><![CDATA[课程《GAMES101》的学习笔记01：Introduction, Transformation, Rasterization]]></summary></entry><entry><title type="html">Week_011 Record</title><link href="http://localhost:4000/2022/11/21/Week_011_Record/" rel="alternate" type="text/html" title="Week_011 Record" /><published>2022-11-21T21:15:00+08:00</published><updated>2022-11-21T21:15:00+08:00</updated><id>http://localhost:4000/2022/11/21/Week_011_Record</id><content type="html" xml:base="http://localhost:4000/2022/11/21/Week_011_Record/"><![CDATA[<p>My week’s record during postgraduate period.</p>

<ul>
  <li>
    <p>Monday</p>
  </li>
  <li>
    <p>Tuesday</p>
  </li>
</ul>

<p>leetcode top100: 8/100</p>

<ul>
  <li>Wednesday</li>
</ul>

<p>leetcode top100: 11/100</p>

<ul>
  <li>Thursday</li>
</ul>

<p>leetcode top100: 13/100</p>

<ul>
  <li>
    <p>Friday</p>
  </li>
  <li>
    <p>Saturday</p>
  </li>
  <li>
    <p>Sunday</p>
  </li>
  <li>
    <p>Summary</p>
  </li>
</ul>

<p><a href="https://zhengtongdu.github.io/2022/11/14/Week_010_Record/">See last week’s record</a></p>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="research_record" /><summary type="html"><![CDATA[My week’s record during postgraduate period.]]></summary></entry><entry><title type="html">Week_010 Record</title><link href="http://localhost:4000/2022/11/14/Week_010_Record/" rel="alternate" type="text/html" title="Week_010 Record" /><published>2022-11-14T00:38:00+08:00</published><updated>2022-11-14T00:38:00+08:00</updated><id>http://localhost:4000/2022/11/14/Week_010_Record</id><content type="html" xml:base="http://localhost:4000/2022/11/14/Week_010_Record/"><![CDATA[<p>My  week’s record during postgraduate period.</p>

<ul>
  <li>Monday</li>
</ul>

<p>Running 5.02 km in 33m25s</p>

<p>6.046 Recitation 01</p>

<p>6.046 Recitation 02</p>

<ul>
  <li>
    <p>Tuesday</p>
  </li>
  <li>
    <p>Wednesday</p>
  </li>
</ul>

<p>6.046 Problem Set 01</p>

<p>6.046 Problem Set 02</p>

<p>Choosing what emacs configuration.</p>

<ul>
  <li>Thursday</li>
</ul>

<p>leetcode top100: 4/100</p>

<ul>
  <li>Friday</li>
</ul>

<p>leetcode top100: 6/100</p>

<ul>
  <li>Saturday</li>
</ul>

<p>Relaxing</p>

<p>Running 5.06 km in 31m15s</p>

<ul>
  <li>Sunday</li>
</ul>

<p>Writing design document</p>

<p>Running 5.03 km in 30m13s</p>

<ul>
  <li>Summary</li>
</ul>

<p><a href="https://zhengtongdu.github.io/2022/11/07/Week_009_Record/">See last week’s record</a></p>

<p><a href="https://zhengtongdu.github.io/2022/11/21/Week_011_Record/">See next week’s record</a></p>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="research_record" /><summary type="html"><![CDATA[My week’s record during postgraduate period.]]></summary></entry><entry><title type="html">Week_009 Record</title><link href="http://localhost:4000/2022/11/07/Week_009_Record/" rel="alternate" type="text/html" title="Week_009 Record" /><published>2022-11-07T19:30:00+08:00</published><updated>2022-11-07T19:30:00+08:00</updated><id>http://localhost:4000/2022/11/07/Week_009_Record</id><content type="html" xml:base="http://localhost:4000/2022/11/07/Week_009_Record/"><![CDATA[<p>My  week’s record during postgraduate period.</p>

<ul>
  <li>Monday</li>
</ul>

<p>Running 5.07 km in 31m47s</p>

<ul>
  <li>Tuesday</li>
</ul>

<p>(1.5h) ConvexHull(by “Divide and Conquer”): design framework and solve the ostream operation of point2<T>.
Running 5.07 km in 31m35s</T></p>

<ul>
  <li>Wednesday</li>
</ul>

<p>leetcode top100: 1/100
(3h) ConvexHull(by “Divide and Conquer”): finishing(but have no document)!</p>

<ul>
  <li>Thursday</li>
</ul>

<p>Welcome my new laptop!</p>

<ul>
  <li>Friday</li>
</ul>

<p>Installing double systems and applications for working.
Running 5.01 km in 37m48s</p>

<ul>
  <li>Saturday</li>
</ul>

<p>6.046 Lecture 03: Divide and Conquer FFT</p>

<ul>
  <li>Sunday</li>
</ul>

<p>6.046 Lecture 04: Divide and Conquer van Emde Boas Tree</p>

<ul>
  <li>Summary</li>
</ul>

<p><a href="https://zhengtongdu.github.io/2022/10/31/Week_008_Record/">See last week’s record</a></p>

<p><a href="https://zhengtongdu.github.io/2022/11/14/Week_010_Record/">See next week’s record</a></p>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="research_record" /><summary type="html"><![CDATA[My week’s record during postgraduate period.]]></summary></entry><entry><title type="html">Week_008 Record</title><link href="http://localhost:4000/2022/10/31/Week_008_Record/" rel="alternate" type="text/html" title="Week_008 Record" /><published>2022-10-31T09:51:00+08:00</published><updated>2022-10-31T09:51:00+08:00</updated><id>http://localhost:4000/2022/10/31/Week_008_Record</id><content type="html" xml:base="http://localhost:4000/2022/10/31/Week_008_Record/"><![CDATA[<p>My  week’s record during postgraduate period.</p>

<ul>
  <li>Monday</li>
</ul>

<p>The begining of program design: Arithmetic Caculator, thinking how to design for 2h</p>

<ul>
  <li>Tuesday</li>
</ul>

<p>(4h) ArithmeticCaculator Design: finish subroutine: split expression into vector of strings.</p>

<p>Running 5.09 km in 32m08s</p>

<ul>
  <li>Wednesday</li>
</ul>

<p>(6h) ArithmeticCaculator Design: finish subroutine: generate list contains different types of elements.</p>

<ul>
  <li>Thursday</li>
</ul>

<p>(9h) ArithmeticCaculator Design: finish programming.</p>

<p>Running 5.05 km in 31m58s</p>

<ul>
  <li>Friday</li>
</ul>

<p>Attending two conferences.</p>

<ul>
  <li>Saturday</li>
</ul>

<p>Relaxation.</p>

<ul>
  <li>Sunday</li>
</ul>

<p>Doing midterm homework.</p>

<ul>
  <li>Summary</li>
</ul>

<p><a href="https://zhengtongdu.github.io/2022/10/24/Week_007_Record/">See last week’s record</a></p>

<p><a href="https://zhengtongdu.github.io/2022/11/07/Week_009_Record/">See next week’s record</a></p>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="research_record" /><summary type="html"><![CDATA[My week’s record during postgraduate period.]]></summary></entry><entry><title type="html">Week_007 Record</title><link href="http://localhost:4000/2022/10/24/Week_007_Record/" rel="alternate" type="text/html" title="Week_007 Record" /><published>2022-10-24T16:08:00+08:00</published><updated>2022-10-24T16:08:00+08:00</updated><id>http://localhost:4000/2022/10/24/Week_007_Record</id><content type="html" xml:base="http://localhost:4000/2022/10/24/Week_007_Record/"><![CDATA[<p>My  week’s record during postgraduate period.</p>
<ul>
  <li>
    <p>Monday</p>
  </li>
  <li>
    <p>Tuesday</p>
  </li>
</ul>

<p>Running 5.14 km in 33m10s</p>

<ul>
  <li>
    <p>Wednesday</p>
  </li>
  <li>
    <p>Thursday</p>
  </li>
  <li>
    <p>Friday</p>
  </li>
  <li>
    <p>Saturday</p>
  </li>
  <li>
    <p>Sunday</p>
  </li>
</ul>

<p>Running 5.02 km in 31m26s</p>

<ul>
  <li>Summary</li>
</ul>

<p>This week I did few things about research due to lots of mid-term homework and other useless things:(.</p>

<p><a href="https://zhengtongdu.github.io/2022/10/17/Week_006_Record/">See last week’s record</a></p>

<p><a href="https://zhengtongdu.github.io/2022/10/31/Week_008_Record/">See next week’s record</a></p>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="research_record" /><summary type="html"><![CDATA[My week’s record during postgraduate period. Monday]]></summary></entry><entry><title type="html">Week_006 Record</title><link href="http://localhost:4000/2022/10/17/Week_006_Record/" rel="alternate" type="text/html" title="Week_006 Record" /><published>2022-10-17T18:13:00+08:00</published><updated>2022-10-17T18:13:00+08:00</updated><id>http://localhost:4000/2022/10/17/Week_006_Record</id><content type="html" xml:base="http://localhost:4000/2022/10/17/Week_006_Record/"><![CDATA[<p>My  week’s record during postgraduate period.</p>

<ul>
  <li>Monday</li>
</ul>

<p>Effective Modern C++: Stop at Item 4</p>

<ul>
  <li>Tuesday</li>
</ul>

<p>Effective Modern C++: Stop at Item 6</p>

<p>PBRT: Stop at 2.7: Transformation</p>

<ul>
  <li>Wednesday</li>
</ul>

<p>Effective Modern C++: Stop at Item 9</p>

<p>Running 5.01 km in 33m17s</p>

<ul>
  <li>Thursday</li>
</ul>

<p>Effective Modern C++: Stop at Item 12</p>

<ul>
  <li>Friday</li>
</ul>

<p>Effective Modern C++: Stop at Item 15</p>

<ul>
  <li>
    <p>Saturday</p>
  </li>
  <li>
    <p>Sunday</p>
  </li>
</ul>

<p>Effective Modern C++: Stop at Item 18
Running 5.11 km in 35m15s</p>

<ul>
  <li>Summary</li>
</ul>

<p><a href="https://zhengtongdu.github.io/2022/10/10/Week_005_Record/">See last week’s record</a></p>

<p><a href="https://zhengtongdu.github.io/2022/10/24/Week_007_Record/">See next week’s record</a></p>]]></content><author><name>zhengtongdu</name><email>zhengtongdu_at_zju.edu.cn</email></author><category term="research_record" /><summary type="html"><![CDATA[My week’s record during postgraduate period.]]></summary></entry></feed>